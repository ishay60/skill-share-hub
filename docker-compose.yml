version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: skillsharehub-postgres
    environment:
      POSTGRES_DB: skillsharehub
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: skillsharehub-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog:latest
    container_name: skillsharehub-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 10s
      timeout: 5s
      retries: 5

  stripe-cli:
    image: stripe/stripe-cli:latest
    container_name: skillsharehub-stripe-cli
    command: "listen --forward-to api:4000/webhooks/stripe"
    environment:
      STRIPE_API_KEY: ${STRIPE_SECRET_KEY:-sk_test_placeholder}
    depends_on:
      - api
    profiles:
      - stripe

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile.dev
    container_name: skillsharehub-api
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://skillsharehub_app:app_password@postgres:5432/skillsharehub
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-dev-secret-change-in-production}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-sk_test_placeholder}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET:-whsec_placeholder}
      APP_URL: http://localhost:3000
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    command: pnpm dev

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile.dev
    container_name: skillsharehub-web
    environment:
      VITE_API_URL: http://localhost:4000
      VITE_APP_URL: http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    command: pnpm dev

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: skillsharehub-network
