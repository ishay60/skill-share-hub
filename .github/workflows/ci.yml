name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: skillsharehub_test
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup environment
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/skillsharehub_test" >> .env
        echo "JWT_SECRET=test-secret-key-for-ci" >> .env
        echo "JWT_EXPIRES_IN=1h" >> .env
        echo "STRIPE_SECRET_KEY=sk_test_placeholder" >> .env
        echo "STRIPE_WEBHOOK_SECRET=whsec_placeholder" >> .env
        echo "APP_URL=http://localhost:3000" >> .env
    
    - name: Generate Prisma client
      run: npm run db:generate
      working-directory: apps/api
    
    - name: Setup test database
      run: |
        cd apps/api
        npx prisma db push --force-reset
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/skillsharehub_test
    
    - name: Run typecheck
      run: npm run typecheck
    
    - name: Run tests
      run: npm run test
      working-directory: apps/api
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/skillsharehub_test
        NODE_ENV: test
    
    - name: Run linting
      run: npm run lint
    
    - name: Build packages
      run: npm run build --workspace=@skill-share-hub/types && npm run build --workspace=@skill-share-hub/ui
    
    - name: Build web app
      run: npm run build
      working-directory: apps/web
    
    - name: Build API
      run: npm run build
      working-directory: apps/api
